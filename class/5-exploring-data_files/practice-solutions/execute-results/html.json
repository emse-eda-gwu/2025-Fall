{
  "hash": "57166810c46384df2ebef754dae7ae03",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exploring Data\"\nsubtitle: \"EMSE 4572/6572: Exploratory Data Analysis\"\nformat: html\n---\n\n\n\n\n\n\n# Practice with summary measurements\n\n1) Read in the following data sets:\n\n- milk_production.csv\n- lotr_words.csv\n\n 2) For each variable in each data set, if possible, summarize its\n\n- Centrality\n- Variability\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# milk_production:\nmilk_production %>%\n    summarise(\n        mean   = mean(milk_produced),\n        median = median(milk_produced),\n        range  = max(milk_produced) - min(milk_produced),\n        sd     = sd(milk_produced),\n        IQR    = IQR(milk_produced)) %>%\n    # Convert to millions units so easier to compare\n    mutate(mean = mean / 10^6, median = median / 10^6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 1 × 5\n#>    mean median       range          sd        IQR\n#>   <dbl>  <dbl>       <dbl>       <dbl>      <dbl>\n#> 1 3132.  1348. 42336000000 5422560750. 2283250000\n```\n\n\n:::\n\n```{.r .cell-code}\n# Summarize for each region\nmilk_production %>%\n    group_by(region) %>%\n    summarise(\n        mean   = mean(milk_produced),\n        median = median(milk_produced),\n        range  = max(milk_produced) - min(milk_produced),\n        sd     = sd(milk_produced),\n        IQR    = IQR(milk_produced)) %>%\n    # Convert to millions units so easier to compare\n    mutate(mean = mean / 10^6, median = median / 10^6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 10 × 6\n#>    region            mean median       range           sd         IQR\n#>    <chr>            <dbl>  <dbl>       <dbl>        <dbl>       <dbl>\n#>  1 Appalachian      1389.  1555   2403000000   699500755.  1064000000\n#>  2 Corn Belt        3246.  2956.  4351000000  1102501892.  1976000000\n#>  3 Delta States      632.   728.  1053000000   301693057.   512750000\n#>  4 Lake States     13012.  9488  25970000000  7725929795. 15089750000\n#>  5 Mountain         2029.   976. 14611000000  2810218067.  1899250000\n#>  6 Northeast        2506.   596. 14899000000  3977676280.  2016250000\n#>  7 Northern Plains  1375.  1335   3172000000   563133878.   538500000\n#>  8 Pacific          6351.  1626. 42336000000 11017728164.  5517250000\n#>  9 Southeast        1120.   990   2534000000   778927452.  1375250000\n#> 10 Southern Plains  3474.  2195  11362000000  2903616073.  4369500000\n```\n\n\n:::\n\n```{.r .cell-code}\n# lotr_words\nlotr_words %>%\n    summarise(\n        mean   = mean(Female),\n        median = median(Female),\n        range  = max(Female) - min(Female),\n        sd     = sd(Female),\n        IQR    = IQR(Female))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 1 × 5\n#>    mean median range    sd   IQR\n#>   <dbl>  <dbl> <dbl> <dbl> <dbl>\n#> 1  270.    183  1229  392.   329\n```\n\n\n:::\n\n```{.r .cell-code}\n# You can also just use the summary() function\nsummary(milk_production$milk_produced)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n#> 3.000e+06 4.610e+08 1.348e+09 3.132e+09 2.744e+09 4.234e+10\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(milk_production$year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    1970    1982    1994    1994    2005    2017\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(milk_production)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>     region             state                year      milk_produced      \n#>  Length:2400        Length:2400        Min.   :1970   Min.   :3.000e+06  \n#>  Class :character   Class :character   1st Qu.:1982   1st Qu.:4.610e+08  \n#>  Mode  :character   Mode  :character   Median :1994   Median :1.348e+09  \n#>                                        Mean   :1994   Mean   :3.132e+09  \n#>                                        3rd Qu.:2005   3rd Qu.:2.744e+09  \n#>                                        Max.   :2017   Max.   :4.234e+10\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(lotr_words$Female)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>     0.0     2.0   183.0   269.8   331.0  1229.0\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(lotr_words$Male)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>     510     971    2459    2091    2673    3644\n```\n\n\n:::\n:::\n\n\n\n\n# Practice with visual summaries\n\n1) Read in the following data sets:\n\n- faithful.csv\n- marathon.csv\n\n2) Summarize the following variables using an appropriate chart (bar chart, histogram, and / or boxplot):\n\n- faithful: eruptions\n- faithful: waiting\n- marathon: Age\n- marathon: State\n- marathon: Country\n- marathon: `Official Time`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# faithful:\nggplot(faithful) +\n    geom_histogram(aes(x = eruptions))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-3-1.png){width=696.192}\n:::\n\n```{.r .cell-code}\nggplot(faithful) +\n    geom_boxplot(aes(y = eruptions))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-3-2.png){width=696.192}\n:::\n\n```{.r .cell-code}\nggplot(faithful) +\n    geom_histogram(aes(x = waiting))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-3-3.png){width=696.192}\n:::\n\n```{.r .cell-code}\n# marathon\nggplot(marathon) +\n    geom_histogram(aes(x = Age))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-3-4.png){width=696.192}\n:::\n\n```{.r .cell-code}\nggplot(marathon) +\n    geom_boxplot(aes(y = Age))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-3-5.png){width=696.192}\n:::\n\n```{.r .cell-code}\nmarathon %>%\n    filter(Overall < 50) %>%\n    count(State) %>%\n    ggplot() +\n    geom_col(aes(x = n, y = reorder(State, n)))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-3-6.png){width=696.192}\n:::\n\n```{.r .cell-code}\nmarathon %>%\n    filter(Overall < 50) %>%\n    count(Country) %>%\n    ggplot() +\n    geom_col(aes(x = n, y = reorder(Country, n)))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-3-7.png){width=696.192}\n:::\n\n```{.r .cell-code}\nggplot(marathon) +\n    geom_histogram(aes(x = `Official Time`))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-3-8.png){width=696.192}\n:::\n\n```{.r .cell-code}\nggplot(marathon) +\n    geom_boxplot(aes(y = `Official Time`))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-3-9.png){width=696.192}\n:::\n:::\n\n\n\n\n# Correlation\n\nUsing the `penguins` data frame:\n\n1. Find the two variables with the largest correlation in absolute value (i.e. closest to -1 or 1).\n\n2. Create a scatter plot of those two variables.\n\n3. Add an annotation for the Pearson correlation coefficient.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n    ggcorr(label = TRUE)\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-4-1.png){width=696.192}\n:::\n\n```{.r .cell-code}\ncorr <- cor(\n    penguins$flipper_length_mm, penguins$body_mass_g,\n    use = \"complete.obs\")\n\ncorLab <- paste(\"r = \", round(corr, 2))\n\npenguins %>%\n    ggplot() +\n    geom_point(\n        aes(\n            x = flipper_length_mm,\n            y = body_mass_g),\n        alpha = 0.7\n    ) +\n    annotate(\n        geom = 'text',\n        x = 175, y = 6000,\n        label = corLab,\n        hjust = 0, size = 5) +\n    theme_classic(base_size = 18) +\n    labs(\n        x = \"Flipper length (mm)\",\n        y = \"Body mass (g)\"\n    )\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-4-2.png){width=696.192}\n:::\n:::\n\n\n\n\n\n# Practice doing EDA\n\n1) Read in the candy_rankings.csv data sets\n\n2) Preview the data, note the data types and what each variable is.\n\n3) Visualize (at least) three _relationships_ between two variables (guided by a question) using an appropriate chart:\n\n- Bar chart\n- Scatterplot\n- Boxplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# candy_rankings\ncandy_rankings %>%\n  ggplot() +\n  geom_boxplot(aes(x = fruity, y = winpercent))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-5-1.png){width=696.192}\n:::\n\n```{.r .cell-code}\ncandy_rankings %>%\n  ggplot() +\n  geom_boxplot(aes(x = chocolate, y = winpercent))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-5-2.png){width=696.192}\n:::\n\n```{.r .cell-code}\ncandy_rankings %>%\n    ggplot() +\n    geom_histogram(aes(x = winpercent, fill = chocolate), alpha = 0.3)\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-5-3.png){width=696.192}\n:::\n\n```{.r .cell-code}\n# Looks like people rate candy with chocolate much higher!\n\n# Reeses at the top!\ncandy_rankings %>%\n  ggplot() +\n  geom_col(\n      aes(\n          x = winpercent, \n          y = reorder(competitorname, winpercent)\n      )\n  )\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-5-4.png){width=696.192}\n:::\n\n```{.r .cell-code}\n# No correlation between sugar and winning\ncandy_rankings %>%\n  ggplot() +\n  geom_point(aes(x = pricepercent, y = sugarpercent))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-5-5.png){width=696.192}\n:::\n\n```{.r .cell-code}\ncandy_rankings %>%\n  ggplot() +\n  geom_point(aes(x = winpercent, y = sugarpercent))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-5-6.png){width=696.192}\n:::\n\n```{.r .cell-code}\n# Interesting...seems people aren't that sensitive to price\ncandy_rankings %>%\n  ggplot() +\n  geom_point(aes(x = winpercent, y = pricepercent))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-5-7.png){width=696.192}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}